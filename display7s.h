/*
 * released under GNU AFFERO GENERAL PUBLIC LICENSE Version 3, 19 November 2007
 * 
 *      Author:     Andrea Biasutti
 *      Date:       July 5th 2019
 *      Hardware:   PIC32MX440256H
 * 
 * source available here https://github.com/andb70/Display7s.X
 * 
 */

/*
* https://everlighteurope.com/index.php?controller=attachment?id_attachment=4657
* 
*	10	.	.	.	6					
*		  --a--							
*		|		|		1	e		b	6
*		f		b		2	d		a	7
*		|		|		3	  COM +		8
*		  --g--			4	c		f	9
*		|		|		5	dp		g	10
*		e		c						
*		|		|						
*		  --d--		dp				
*	1	.	.	.	5		
*
*   pin:	5   10  9   1   2   4   6   7
*	bar:	dp  g   f   e   d   c   b   a
* 	bit:	7   6   5   4   3   2   1   0	
*/										

// pass 0..15 > display hex symbols					
static const unsigned char display7s[] = {										
	0xC0,	0xF9,	0xA4,	0xB0,		//	0	1	2	3
	0x99,	0x92,	0x82,	0xF8,		//	4	5	6	7
	0x80,	0x98,	0x88,	0x83,		//	8	9	A	b
	0xC6,	0xA1,	0x86,	0x8E,		//	C	d	E	F
	0xFF								// all off   
};


// pass '0'..'F' > display hex symbols	
// pass alphabetical > 
// if available > display alphabetical 
// else display > ASCII(2))
static const unsigned char dispEx7s[] = {																	
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xDD,	0xFC,	0xFC,	0xFC,	0xFC,	0xDF,	//			"					'
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xBF,	0xFC,	0xFC,	//						-		
	0xC0,	0xF9,	0xA4,	0xB0,	0x99,	0x92,	0x82,	0xF8,	//	0	1	2	3	4	5	6	7
	0x80,	0x98,	0xFC,	0xFC,	0xFC,	0xB7,	0xFC,	0xFC,	//	8	9				=		
	0xFC,	0x88,	0x83,	0xC6,	0xA1,	0x86,	0x8E,	0xC2,	//		A	B	C	D	E	F	G
	0x89,	0xCF,	0xE1,	0xFC,	0xC7,	0xFC,	0xAB,	0xC0,	//	H	I	J		L		N	O
	0x8C,	0x98,	0xAF,	0x92,	0x87,	0xC1,	0xFC,	0xFC,	//	P	Q	R	S	T	U		
	0xFC,	0x91,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xF7,	//		Y						_
	0xFC,	0x88,	0x83,	0xA7,	0xA1,	0x86,	0x8E,	0xC2,	//		a	b	c	d	e	f	g
	0x8B,	0xCF,	0xE1,	0xFC,	0xC7,	0xFC,	0xAB,	0xA3,	//	h	i	j		l		n	o
	0x8C,	0x98,	0xAF,	0x92,	0x87,	0xE3,	0xFC,	0xFC,	//	p	q	r	s	t	u		
	0xFC,	0x91,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//		y						
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0x9C,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//	°							
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	//								
	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC,	0xFC	//								
};																										

// prototype of method to call to light up the display
void showOnDisplay(unsigned char);
/*
void showOnDisplay(unsigned char dato) {
	// https://www.microchip.com/forums/m821163.aspx > about setting port bits
	//	D3			  RD5	 	Disp1   a
	//	D4			  RD6	 	Disp2   b
	//	D5			  RD7	 	Disp3   c
	//	D6			  RD8	 	Disp4   d	
	//	D7			  RD11		Disp8   d
	//  
	//       15 14 13 12 11 10 09 08 07 06 05 04 03 02 01 00
	// dato							 dp  g  f  e  d  c  b  a
	// PORTD			 dp		   d  c  b  a	
	// PORTG					g  f  e
	//
	int d = (LATD & 0xF61F);
	int abcd = ((dato & 0x0F) << 5);
	int dp = ((dato & 0x80) << 4);
	LATD = d | abcd | dp;

	//	D10(#SS)		RG9	 	Disp7   g
	//	D11(MOSI)	   RG8	 	Disp6   f
	//	D12(MISO)	   RG7	 	Disp5   e
	int g = (LATG & 0xFC7F);
	int efg = ((dato & 0x0070) << 3);
	LATG = g | efg;
}
*/